<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Nueva Publicación</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            display: flex;
            flex-wrap: wrap;
        }

        .container {
            display: flex;
            flex-direction: row;
            width: 100%;
        }

        .form-container, .table-container {
            flex: 1;
            padding: 20px;
            box-sizing: border-box;
            height: calc(100vh - 80px); /* Ajustar según el espacio disponible */
            overflow: auto; /* Añadir scroll si es necesario */
        }

        .form-container {
            max-width: 400px;
            margin: auto;
            margin-top: 5px; /* Subir 5 pixeles */
        }

        .table-container {
            padding-left: 40px;
            margin-top: 3px; /* Ajustar para que esté 3 pixeles más abajo */
            margin-left: 20px; /* Ajuste para separación del título */
        }

        h2 {
            color: #333;
            margin-top: 0; /* Eliminar margen superior predeterminado */
        }

        form {
            padding: 20px;
            border: 1px solid #ddd;
            border-radius: 5px;
            background-color: #f9f9f9;
            box-sizing: border-box; /* Asegura que el padding se incluya en el ancho total */
        }

        label {
            font-weight: bold;
            display: block;
            text-align: left; /* Alinear etiquetas a la izquierda */
        }

        input[type="text"], textarea {
            width: calc(100% - 20px); /* Asegura que el campo no se choque con el borde */
            padding: 8px;
            margin-top: 5px;
            margin-bottom: 15px;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-sizing: border-box; /* Asegura que el padding se incluya en el ancho total */
        }

        input[type="submit"], #verPublicaciones, #eliminarPublicacionBtn {
            background-color: #4CAF50;
            color: white;
            padding: 10px 15px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            margin-top: 0; /* Mantener el mismo nivel que la grilla */
            display: block;
            width: auto; /* Ancho automático según contenido */
            margin-left: auto; /* Centrar el botón */
            margin-right: 0; /* Alinear a la derecha */
        }

        input[type="submit"]:hover, #verPublicaciones:hover, #eliminarPublicacionBtn:hover {
            background-color: #45a049;
        }

        .publicaciones-container {
            max-width: 100%;
            overflow-x: auto;
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        table, th, td {
            border: 1px solid #ddd;
        }

        th, td {
            padding: 10px;
            text-align: left;
        }

        th {
            background-color: #f2f2f2;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="form-container">
            <h2>Nueva Publicación</h2>
            <form id="publicacionForm">
                <label for="especie">Especie:</label>
                <input type="text" id="especie" name="especie"><br><br>

                <label for="nombre">Nombre:</label>
                <input type="text" id="nombre" name="nombre"><br><br>

                <label for="descripcion">Descripción:</label>
                <textarea id="descripcion" name="descripcion" rows="4"></textarea><br><br>

                <label for="ubicacion">Ubicación:</label>
                <input type="text" id="ubicacion" name="ubicacion"><br><br>

                <label for="estado">Estado:</label>
                <input type="text" id="estado" name="estado"><br><br>

                <label for="telefono">Teléfono:</label>
                <input type="text" id="telefono" name="telefono"><br><br>

                <input type="submit" value="Publicar" id="publicar">
            </form>
        </div>

        <div class="table-container">
            <div style="display: flex; align-items: center; margin-bottom: 10px;">
                <h2 style="margin: 0;">Lista de Publicaciones</h2>
                <button id="verPublicaciones">Mostrar Publicaciones</button>
            </div>
            <div class="publicaciones-container">
                <table id="publicacionesTable">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Especie</th>
                            <th>Nombre</th>
                            <th>Descripción</th>
                            <th>Ubicación</th>
                            <th>Estado</th>
                            <th>Teléfono</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', async function() {
            await actualizarListadoPublicaciones();
        });

        document.getElementById('publicacionForm').addEventListener('submit', async function(event) {
            event.preventDefault();

            const formData = new FormData(this);
            const jsonData = {};

            formData.forEach((value, key) => {
                jsonData[key] = value;
            });

            const response = await fetch('http://127.0.0.1:8000/publicaciones/nueva/', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(jsonData)
            });

            if (response.ok) {
                console.log('Publicación agregada correctamente');
                this.reset(); // Vaciar los campos del formulario
                await actualizarListadoPublicaciones(); // Actualizar listado de publicaciones
            } else {
                console.error('Error al agregar publicación');
            }
        });

        document.getElementById('verPublicaciones').addEventListener('click', async function() {
            await actualizarListadoPublicaciones();
        });

        async function actualizarListadoPublicaciones() {
            const response = await fetch('http://127.0.0.1:8000/publicaciones/', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            if (response.ok) {
                const publicaciones = await response.json();
                const tbody = document.querySelector('#publicacionesTable tbody');
                tbody.innerHTML = ''; // Limpiar contenido previo
                publicaciones.forEach(publicacion => {
                    const tr = document.createElement('tr');
                    tr.innerHTML = `
                        <td>${publicacion.id_publicacion}</td>
                        <td>${publicacion.especie}</td>
                        <td>${publicacion.nombre}</td>
                        <td>${publicacion.descripcion}</td>
                        <td>${publicacion.ubicacion}</td>
                        <td>${publicacion.estado}</td>
                        <td>${publicacion.telefono}</td>
                        <td><button onclick="eliminarPublicacion(${publicacion.id_publicacion})" id="eliminarPublicacionBtn">Eliminar</button></td>
                    `;
                    tbody.appendChild(tr);
                });
            } else {
                console.error('Error al obtener publicaciones');
            }
        }

        async function eliminarPublicacion(idPublicacion) {
            const confirmarEliminar = confirm('¿Está seguro que desea eliminar esta publicación?');
            if (!confirmarEliminar) return;

            const response = await fetch(`http://127.0.0.1:8000/publicaciones/${idPublicacion}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            if (response.ok) {
                console.log('Publicación eliminada correctamente');
                await actualizarListadoPublicaciones(); // Actualizar listado de publicaciones
            } else {
                console.error('Error al eliminar publicación');
            }
        }
    </script>
</body>
</html>
